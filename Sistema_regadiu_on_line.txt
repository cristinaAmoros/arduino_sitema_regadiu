#include <WiFi.h>
#include <WiFiClient.h>
#include <WebServer.h>
#include <ESPmDNS.h>
#define motor 15
int ldr = 4;
const char* ssid = "Pisssitooo";
const char* password = "pisito1234";
float  temperatura = 25, luz =0;
WebServer server(80);

const int AirValue = 620;   //you need to replace this value with Value_1
const int WaterValue = 310;  //you need to replace this value with Value_2
int soilMoistureValue = 0;
int soilmoisturepercent=0;

void handleRoot() {
  char temp[400];
 
  snprintf(temp, 400,
           "<html>\
  <head>\
    <meta http-equiv='refresh' content='5'/>\
    <title>ESP32 Demo</title>\
    <style>\
      body { background-color: #cccccc; font-family: Arial, Helvetica, Sans-Serif; Color: #000088; }\
    </style>\
  </head>\
  <body>\
    <h1>Hola desde ESP32!</h1>\
    <p>Humedad y luz: %2d %2d</p>\
    <a href='./regar'>\
    <button>\
    Regar\
    </button>\
    </a>\
  </body>\
</html>",
           soilmoisturepercent, luz
          );
  server.send(200, "text/html", temp);
}

void handleNotFound() {
  String message = "File Not Found\n\n";
  message += "URI: ";
  message += server.uri();
  message += "\nMethod: ";
  message += (server.method() == HTTP_GET) ? "GET" : "POST";
  message += "\nArguments: ";
  message += server.args();
  message += "\n";
  for (uint8_t i = 0; i < server.args(); i++) {
    message += " " + server.argName(i) + ": " + server.arg(i) + "\n";
  }
  server.send(404, "text/plain", message);
}
void regar(){
  /*
  REGAR CODIGO  
  */
  digitalWrite(motor, HIGH);
  char temp[400];
  snprintf(temp, 400,
           "<html>\
  <head>\
    <script>\
    window.location.href = './';\
    </script>\
  </head>\
  <body>\
  </body>\
</html>");
  server.send(200, "text/html", temp);
  Serial.println("Regando...");
  delay(5000);
  digitalWrite(motor, LOW);
}
void setup(void) {
  pinMode(motor, OUTPUT);
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);
  Serial.println("");

  // Wait for connection
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to ");
  Serial.println(ssid);
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  if (MDNS.begin("esp32")) {
    Serial.println("MDNS responder started");
  }

  server.on("/", handleRoot);
  server.on("/regar", regar);
  server.on("/inline", []() {
    server.send(200, "text/plain", "this works as well");
  });
  server.onNotFound(handleNotFound);
  server.begin();
  Serial.println("HTTP server started");
}

void loop(void) {
  server.handleClient();
  delay(2);
  luz = digitalRead(ldr);
  soilMoistureValue = digitalRead(2);  //put Sensor insert into soil
    Serial.println(soilMoistureValue);
    Serial.println(luz);
    soilmoisturepercent = map(soilMoistureValue, AirValue, WaterValue, 0, 100);
    if(soilmoisturepercent >= 100)
    {
      Serial.println("100 %");
    }
    else if(soilmoisturepercent <=0)
    {
      Serial.println("0 %");
    }
    else if(soilmoisturepercent >0 && soilmoisturepercent < 100)
    {
      Serial.print(soilmoisturepercent);
      Serial.println("%");
    }
}